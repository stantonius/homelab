---
# - name: Check that the machine_image has the extension .img
#   ansible.builtin.assert:
#     that: machine_image.endswith('.img')
#     msg: "The machine_image variable must have the extension '.img'"

- name: Install proxmoxer on main host
  ansible.builtin.pip:
    name: proxmoxer
    state: present

- name: Ensure pycdlib is installed
  ansible.builtin.pip:
    name: pycdlib
    state: present

# - name: Generate and install the user-data file
#   template:
#     src: user-data.j2
#     dest: "{{ target_dir }}/iso/nocloud/user-data"

# - name: Create an empty meta-data file
#   file:
#     path: "{{ target_dir }}/iso/nocloud/meta-data"
#     state: touch
#     modification_time: preserve
#     access_time: preserve

- name: Print the ssh key and store it to a variable
  delegate_to: localhost
  ansible.builtin.shell: "cat {{ machine_ssh_key }}"
  register: ssh_key

- name: Create VM
  community.general.proxmox_kvm:
    node: bigprox
    api_host: "{{host_ip}}"
    api_user: "{{root_user}}"
    api_password: "{{root_password}}"
    vcpus: "{{machine_cpus}}"
    cores: "{{machine_cores}}"
    memory: "{{machine_ram}}"
    name: "{{machine_name}}"
    state: present
    onboot: no
    vmid: "{{machine_id}}"
    sshkeys: "{{ssh_key.stdout}}"
    cicustom: "user=local:snippets/user-data,meta=local:snippets/meta-data"
    citype: "nocloud"
    net:
      net0: "model=virtio,bridge=vmbr0,firewall=1"
    scsi:
      scsi0: "local-lvm:{{machine_disk}}"
    scsihw: virtio-scsi-pci
    ide:
      ide0: "local:iso/{{machine_image}},media=cdrom"
      ide2: "zfs1ssd-data:cloudinit,format=qcow2"

- name: Start VM
  community.general.proxmox_kvm:
    node: bigprox
    api_host: "{{host_ip}}"
    api_user: "{{root_user}}"
    api_password: "{{root_password}}"
    name: "{{machine_name}}"
    state: started
