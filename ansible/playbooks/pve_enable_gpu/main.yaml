---
- name: Enable vGPU Passthough
  hosts: "{{node_name}}"
  gather_facts: yes
  become: yes
  become_user: root
  
  tasks:
    - name: Ensure community version is configured
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list
        line: "deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription"
        state: present
        create: yes
        mode: 0644
        owner: root
        group: root
        backup: yes
        regexp: "deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription"
        validate: "grep -q 'deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription' %s"
    - name: Ensure enterprise version is removed
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/pve-enterprise.list
        line: ""
        state: absent
        create: yes
        mode: 0644
        owner: root
        group: root
        backup: yes
        regexp: "deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription"
        validate: "grep -q 'deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription' %s"
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
        force_apt_get: yes
    - name: Install required packages
      ansible.builtin.apt:
        name:
          - git
          - build-essential
          - dkms
          - pve-headers
          - mdevctl
        state: present
    - name: Clone vGPU Proxmox repo
      ansible.builtin.git:
        repo: https://gitlab.com/polloloco/vgpu-proxmox.git
        dest: /root/vgpu-proxmox
        force: yes
    - name: Clone vGPU Unlock repo
      ansible.builtin.git:
        repo: https://github.com/mbilker/vgpu_unlock-rs.git
        dest: /opt/vgpu_unlock-rs
        force: yes
    - name: Install Rust compiler with profile minimal if rust is not installed
      ansible.builtin.command: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
      args:
        creates: /root/.cargo/bin/rustc
      when: not ansible_facts.packages['rustc'] is defined
    - name: Compile vGPU Unlock by running cargo build --release in /opt/vgpu_unlock-rs
      ansible.builtin.command: cargo build --release
      args:
        chdir: /opt/vgpu_unlock-rs
    - name: Ensure /etc/vgpu_unlock directory exists
      ansible.builtin.file:
        path: /etc/vgpu_unlock
        state: directory
        mode: 0755
        owner: root
        group: root
    - name: Create /etc/vgpu_unlock/profile_override.toml
      ansible.builtin.file:
        path: /etc/vgpu_unlock/profile_override.toml
        state: touch
        mode: 0644
        owner: root
        group: root
    - name: mkdir /etc/systemd/system/{nvidia-vgpud.service.d,nvidia-vgpu-mgr.service.d}
      ansible.builtin.file:
        path: /etc/systemd/system/{{item}}
        state: directory
        mode: 0755
        owner: root
        group: root
      loop:
        - nvidia-vgpud.service.d
        - nvidia-vgpu-mgr.service.d
    - name: echo -e "[Service]\nEnvironment=LD_PRELOAD=/opt/vgpu_unlock-rs/target/release/libvgpu_unlock_rs.so" > /etc/systemd/system/nvidia-vgpud.service.d/vgpu_unlock.conf
      ansible.builtin.lineinfile:
        path: /etc/systemd/system/nvidia-vgpud.service.d/vgpu_unlock.conf
        line: "Environment=LD_PRELOAD=/opt/vgpu_unlock-rs/target/release/libvgpu_unlock_rs.so"
        state: present
        create: yes
        mode: 0644
        owner: root
        group: root
        backup: yes
        regexp: "Environment=LD_PRELOAD=/opt/vgpu_unlock-rs/target/release/libvgpu_unlock_rs.so"
        validate: "grep -q 'Environment=LD_PRELOAD=/opt/vgpu_unlock-rs/target/release/libvgpu_unlock_rs.so' %s"
    - name: echo -e "[Service]\nEnvironment=LD_PRELOAD=/opt/vgpu_unlock-rs/target/release/libvgpu_unlock_rs.so" > /etc/systemd/system/nvidia-vgpu-mgr.service.d/vgpu_unlock.conf
      ansible.builtin.lineinfile:
        path: /etc/systemd/system/nvidia-vgpu-mgr.service.d/vgpu_unlock.conf
        line: "Environment=LD_PRELOAD=/opt/vgpu_unlock-rs/target/release/libvgpu_unlock_rs.so"
        state: present
        create: yes
        mode: 0644
        owner: root
        group: root
        backup: yes
        regexp: "Environment=LD_PRELOAD=/opt/vgpu_unlock-rs/target/release/libvgpu_unlock_rs.so"
        validate: "grep -q 'Environment=LD_PRELOAD=/opt/vgpu_unlock-rs/target/release/libvgpu_unlock_rs.so' %s"
    - name: find the variable "GRUB_CMDLINE_LINUX_DEFAULT" in /etc/default/grub and replace the entire line with whatever its value is to "GRUB_CMDLINE_LINUX_DEFAULT=\"quiet amd_iommu=on iommu=pt initcall_blacklist=sysfb_init\""
      ansible.builtin.lineinfile:
        path: /etc/default/grub
        line: "GRUB_CMDLINE_LINUX_DEFAULT=\"quiet amd_iommu=on iommu=pt initcall_blacklist=sysfb_init\""
        state: present
        create: yes
        mode: 0644
        owner: root
        group: root
        backup: yes
        regexp: "GRUB_CMDLINE_LINUX_DEFAULT=.*$"
        validate: "grep -q 'GRUB_CMDLINE_LINUX_DEFAULT=\"quiet amd_iommu=on iommu=pt initcall_blacklist=sysfb_init\"' %s"
    - name: Update grub
      ansible.builtin.command: update-grub








